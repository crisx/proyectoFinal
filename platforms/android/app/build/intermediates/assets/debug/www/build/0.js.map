{"version":3,"sources":["../../src/pages/register/register.module.ts","../../src/pages/register/register.ts"],"names":[],"mappings":"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","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { RegisterPage } from './register';\n\n@NgModule({\n  declarations: [\n    RegisterPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(RegisterPage),\n  ],\n})\nexport class RegisterPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register/register.module.ts","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { AuthProvider } from '../../providers/auth/auth';\nimport { LoadingController } from 'ionic-angular/components/loading/loading-controller';\nimport { AlertController } from 'ionic-angular/components/alert/alert-controller';\nimport { TabsPage } from '../tabs/tabs';\n\n@IonicPage()\n@Component({\n\n  selector: 'page-register',\n  templateUrl: 'register.html',\n\n})\n\nexport class RegisterPage {\n\n  // Formulario de registro\n  public signupForm: FormGroup;\n\n  constructor(public navCtrl: NavController, public loadingCtrl: LoadingController, public alertCtrl: AlertController, public navParams: NavParams, private formBuilder: FormBuilder, private authProvider: AuthProvider) {\n\n    // Se crea las validaciones del formulario de inicio de sesión.\n    this.signupForm = this.formBuilder.group({\n      email: ['', Validators.compose([Validators.required, Validators.email])],\n      password: ['', Validators.compose([Validators.required, Validators.minLength(6)])],\n      confirmPass: ['', Validators.compose([Validators.required, Validators.minLength(6)])]\n    }, { validator: this.checkIfMatchingPasswords('password', 'confirmPass') });\n\n  }\n\n  /**\n   * Método empleado para realizar el registro y posterior inicio de sesión de un usuario.\n   */\n  registerEntrar(): void {\n\n    // Se valida el formulario de ingreso\n    if (this.signupForm.valid) {\n\n      // Se muestra el loading durante el proceso de inserción.\n      let loader = this.loadingCtrl.create({\n\n        content: \"Registering...\"\n\n      });\n\n      loader.present();\n\n      // Se llama el provider encargado de hacer el registro.\n      this.authProvider.signup(this.signupForm.value.email, this.signupForm.value.password).then(() => {\n\n          // Se oculta el loader y se redirige a la pantalla de tabs.\n          loader.dismiss();\n\n          this.navCtrl.setRoot(TabsPage);\n\n        }, error => {\n\n          // Se oculta el loader y se muestra un mensaje de fallo.\n          this.showAlert('Error!', error.message);\n\n          loader.dismiss();\n\n        });\n\n    } else {\n\n      // Se muestra un error por validación de formularios.\n      this.showAlert('Incorrect data!', 'Please check your input data.');\n\n    }\n  }\n\n  /**\n   * Método empleado para realizar validar el campo de confirmación de constraseña.\n   * @param password Contraseña ingresada.\n   * @param confirmPassword Confirmación de contraseña ingresada.\n   */\n  checkIfMatchingPasswords(password: string, confirmPassword: string) {\n\n    return (group: FormGroup) => {\n\n      // Se obtienen los valores de los input\n      let passwordInput = group.controls[password];\n      let passwordConfirmationInput = group.controls[confirmPassword];\n\n      // Se valida que sean iguales\n      if (passwordInput.value !== passwordConfirmationInput.value) {\n\n        // Se asigna el error al input de confirmación.\n        return passwordConfirmationInput.setErrors({ notEquivalent: true });\n\n      } else {\n\n        // Se limpia el error del input de confirmación.\n        return passwordConfirmationInput.setErrors(null);\n\n      }\n    }\n  }\n\n  /**\n   * Método utilizado para mostrar un Alert.\n   * @param title Título del Alert a mostrar.\n   * @param message Mensaje del Alert a mostrar.\n   */\n  showAlert(title: string, message: string) {\n\n    let alert = this.alertCtrl.create({\n\n      title: title,\n      subTitle: message,\n      buttons: ['OK']\n\n    });\n\n    alert.present();\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register/register.ts"],"sourceRoot":""}